/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "com/corona/Component-preload",
	"modules": {
		"com/corona/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"com/corona/model/models\",\r\n\t\"com/corona/controller/ListSelector\",\r\n\t\"com/corona/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"com.corona.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"com/corona/controller/App.controller.js": "sap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"com.corona.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"com/corona/controller/CreateEntity.controller.js": "sap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\",\r\n\t\t'sap/ui/model/Filter',\r\n\r\n], function(BaseController, JSONModel, MessageBox, Filter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.CreateEntity\", {\r\n\t\tinputId: '', //ADD_jhony\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSave: function() {\r\n\t\t\tvar that = this,\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tMessageBox.information(\r\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\r\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\r\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\r\n\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tif (oParams.success) {\r\n\t\t\t\t\t\tthat._fnUpdateSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toModel.submitChanges();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\toModel.resetChanges();\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\r\n\t\t\t\toView = this.getView();\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: oData.objectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for creating new object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onCreate: function(oEvent) {\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"AvisoSet\", {\r\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\r\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\r\n\t\t\t});\r\n\t\t\tthis.getView().setBindingContext(oContext);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"AvisoSet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\talert(\"Error al Modificar Entidad\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the onDisplay event which is triggered when this view is displayed \r\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData && oData.mode === \"update\") {\r\n\t\t\t\tthis._onEdit(oEvent);\r\n\t\t\t} else {\r\n\t\t\t\tthis._onCreate(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n});",
		"com/corona/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"com/corona/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"com/corona/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t'sap/m/Button',\n\t'sap/m/Dialog',\n\t'sap/m/Text'\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast, Filter, FilterOperator, Button, Dialog, Text) {\n\t\"use strict\";\n\treturn BaseController.extend(\"com.corona.controller.Detail\", {\n\t\tformatter: formatter,\n\t\t_timeout: '',\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t});\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\tsap.m.URLHelper.triggerEmail(null, oViewModel.getProperty(\"/shareSendEmailSubject\"), oViewModel.getProperty(\n\t\t\t\t\"/shareSendEmailMessage\"));\n\t\t},\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\toShareDialog.open();\n\t\t},\n\t\t/**\n\t\t * Updates the item count within the line item table's header\n\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t * @private\n\t\t */\n\t\tonListUpdateFinished: function(oEvent) {\n\t\t\tvar sTitle, iTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tif (iTotalItems) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t} else {\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonDelete: function() {\n\t\t\tvar that = this;\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Qmtxt\"),\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\n\t\t\tvar fnMyAfterDeleted = function() {\n\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tquestion: sQuestion\n\t\t\t}, [sPath], fnMyAfterDeleted);\n\t\t},\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonEdit: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tobjectPath: sObjectPath\n\t\t\t});\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\n\t\t\tfor (var value in oParameter) {\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\n\t\t\t}\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"AvisoSet\", oParameter);\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//Asignar los valores del Aviso al Combo\n\t\t\tthis.f_select_key_combos();\n\t\t},\n\n\t\t//onNavBack: function() {\n\t\t//\tthis.f_retornar_launchpad();\n\t\t//},\n\n\t\t/**\n\t\t * Event handler for binding change event\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Qmnum,\n\t\t\t\tsObjectName = oObject.Qmtxt;\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\", oResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\", oResourceBundle.getText(\"shareSendEmailObjectMessage\", [\n\t\t\t\tsObjectName,\n\t\t\t\tsObjectId,\n\t\t\t\tlocation.href\n\t\t\t]));\n\t\t},\n\t\t/**\n\t\t * Event handler for metadata loaded event\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\n\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t});\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * title (optional) may be a string defining the title of the popup.\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t/* eslint-disable */\n\t\t// using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\n\t\t\t}.bind(this);\n\t\t\t// Opens the confirmation dialog\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\n\t\t\t\tactions: [\n\t\t\t\t\tMessageBox.Action.OK,\n\t\t\t\t\tMessageBox.Action.CANCEL\n\t\t\t\t],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Performs the deletion of a list of entities.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\tvar fnFailed = function() {\n\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t}.bind(this);\n\t\t\tvar fnSuccess = function() {\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t}.bind(this);\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\n\t\t},\n\t\t/**\n\t\t * Deletes the entity from the odata model\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.setUseBatch(false);\n\t\t\t\tthis._oODataModel.remove(sPath, {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t},\n\n\t\t//ADD_JHONY\n\t\t/**\n\t\t * Asignar las Claves a los Combox\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_select_key_combos: function() {\n\t\t\t//Se obtiene el contexto para los datos del Aviso Seleccionado\n\t\t\tvar bindingContex = this.getView().getBindingContext();\n\n\t\t\t//Combo Prioridad\n\t\t\tvar prioridad = bindingContex.getProperty(\"Priori\");\n\t\t\tthis.getView().byId(\"cmb_prioridad\").setSelectedKey(prioridad);\n\n\t\t\t//Combo Tipo Usuario\n\t\t\tvar tipoUsr = bindingContex.getProperty(\"Qmcod\");\n\t\t\tthis.getView().byId(\"cmb_tip_usr\").setSelectedKey(tipoUsr);\n\n\t\t\tthis.getView().byId(\"check_primer_contac\").setSelected(false);\n\n\t\t\tthis.getView().byId(\"check_primer_contac\").setEnabled(true);\n\t\t\tthis.getView().byId(\"cmb_tip_usr\").setEnabled(true);\n\n\t\t\tif (bindingContex.getProperty(\"Primcr\") === 'X') {\n\t\t\t\tthis.getView().byId(\"check_primer_contac\").setSelected(true);\n\t\t\t\tthis.getView().byId(\"check_primer_contac\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"cmb_tip_usr\").setEnabled(false);\n\t\t\t}\n\n\t\t},\n\n\t\thandleValueHelp: function(oController) {\n\t\t\t//this.inputId = oController.oSource.sId;\n\t\t\t// create value help dialog\n\t\t\tif (!this._valueHelpDialog) {\n\t\t\t\tthis._valueHelpDialog = sap.ui.xmlfragment(\"com.corona.view.fragment.DlgStatus\", this);\n\t\t\t\tthis.getView().addDependent(this._valueHelpDialog);\n\t\t\t}\n\t\t\t// open value help dialog\n\t\t\tthis._valueHelpDialog.open();\n\t\t},\n\t\t_handleValueHelpSearch: function(evt) {\n\t\t\tvar sValue = evt.getParameter(\"value\");\n\t\t\tvar oFilter = new Filter(\"Txt04\", sap.ui.model.FilterOperator.Contains, sValue);\n\t\t\tevt.getSource().getBinding(\"items\").sOperationMode = \"Client\";\n\t\t\tevt.getSource().getBinding(\"items\").filter([oFilter]);\n\t\t},\n\n\t\t_handleValueHelpClose: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\n\t\t\t//Se obtiene el contexto para los datos del Aviso Seleccionado\n\t\t\tvar bindingContext = this.getView().getBindingContext();\n\t\t\tvar pathAviso = bindingContext.getPath();\n\n\t\t\tif (oSelectedItem) {\n\t\t\t\tvar estatus_usr = this.getView().byId(\"txt_status_usr\");\n\t\t\t\testatus_usr.setValue(oSelectedItem.getDescription());\n\n\t\t\t\tthis.getView().getModel().setProperty(pathAviso + '/Statusr', oSelectedItem.getTitle());\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\t\t},\n\t\t/**\n\t\t * Abrir el Dialogo con la Lista de Sintomas\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_ayuda_busqueda_sint: function(oController) {\n\t\t\t//this.inputId = oController.oSource.sId;\n\t\t\t// create value help dialog\n\t\t\tif (!this._dialogo_sintoma) {\n\t\t\t\tthis._dialogo_sintoma = sap.ui.xmlfragment(\"com.corona.view.fragment.DlgSintoma\", this);\n\t\t\t\tthis.getView().addDependent(this._dialogo_sintoma);\n\t\t\t}\n\t\t\t// open value help dialog\n\t\t\tthis._dialogo_sintoma.open();\n\t\t},\n\t\t/**\n\t\t * Abrir el Dialogo con la Lista de partes\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_ayuda_busqueda_parte: function() {\n\t\t\tif (!this._dialogo_parte) {\n\t\t\t\tthis._dialogo_parte = sap.ui.xmlfragment(\"com.corona.view.fragment.DlgParte\", this);\n\t\t\t\tthis.getView().addDependent(this._dialogo_parte);\n\t\t\t}\n\t\t\t// open value help dialog\n\t\t\tthis._dialogo_parte.open();\n\t\t},\n\t\t/**\n\t\t * Filtrar la lista de sintomas de la Ayuda de búsqueda\n\t\t * @function\n\t\t * @param {Object} evt Evento ejecutado cuando el cliente oprime icono Buscar\n\t\t * @public\n\t\t */\n\t\tf_search_grupocod: function(evt) {\n\t\t\tvar sValue = evt.getParameter(\"value\");\n\t\t\tvar oFilter = new Filter(\"Grupoc\", FilterOperator.Contains, sValue);\n\t\t\tvar oFilter2 = new Filter(\"Code\", FilterOperator.Contains, sValue);\n\t\t\tvar oFilter3 = new Filter(\"Descod\", FilterOperator.Contains, sValue);\n\t\t\tvar filtros = new Filter([\n\t\t\t\toFilter,\n\t\t\t\toFilter2,\n\t\t\t\toFilter3\n\t\t\t], false);\n\n\t\t\tvar sOperationMode = evt.getSource().getBinding(\"items\").sOperationMode;\n\t\t\tevt.getSource().getBinding(\"items\").sOperationMode = \"Client\";\n\t\t\tevt.getSource().getBinding(\"items\").filter(filtros);\n\n\t\t\tevt.getSource().getBinding(\"items\").sOperationMode = sOperationMode;\n\t\t},\n\t\t/**\n\t\t * Abrir el Dialogo con la Lista de partes\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_ayuda_busqueda_material: function(event) {\n\t\t\tif (!this._dialogo_material) {\n\t\t\t\tthis._dialogo_material = sap.ui.xmlfragment(\"com.corona.view.fragment.DlgMaterial\", this);\n\t\t\t\tthis.getView().addDependent(this._dialogo_material);\n\t\t\t}\n\t\t\t// open value help dialog\n\t\t\tthis._dialogo_material.open();\n\t\t},\n\n\t\t/**\n\t\t * Implementar la búsqueda de Materiales\n\t\t * @function\n\t\t * @param {Object} evt Evento ejecutado cuando el cliente oprime icono Buscar\n\t\t * @public\n\t\t */\n\t\tf_Search_material: function(evt) {\n\t\t\tvar sValue = evt.getParameter(\"value\");\n\t\t\t//Add Jhony Giraldo\n\n\t\t\tvar BindingContext = this.getView().getBindingContext();\n\t\t\tvar werks = BindingContext.getProperty(\"Werks\");\n\n\t\t\tvar filters = [];\n\t\t\tvar sFilter;\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, werks);\n\t\t\tfilters.push(sFilter);\n\t\t\tsFilter = new sap.ui.model.Filter(\"Matnr\", sap.ui.model.FilterOperator.EQ, \"*\" + sValue + \"*\");\n\t\t\tfilters.push(sFilter);\n\t\t\tsFilter = new sap.ui.model.Filter(\"Maktx\", sap.ui.model.FilterOperator.EQ, \"*\" + sValue + \"*\");\n\t\t\tfilters.push(sFilter);\n\t\t\tvar binding = evt.getSource().getBinding(\"items\");\n\t\t\tbinding.filter(filters);\n\t\t},\n\n\t\tf_confirm_material: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\n\t\t\tif (oSelectedItem) {\n\t\t\t\tvar material = sap.ui.getCore().getElementById(\"cod_material_select\");\n\t\t\t\tmaterial.setValue(oSelectedItem.getTitle());\n\t\t\t\tvar descri_material = sap.ui.getCore().getElementById(\"desc_material_select\");\n\t\t\t\tdescri_material.setText(oSelectedItem.getDescription());\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\t\t},\n\n\t\tf_confirm_parte: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\n\t\t\tif (oSelectedItem) {\n\t\t\t\tvar cod_parte = sap.ui.getCore().getElementById(\"cod_parte_select\");\n\t\t\t\tcod_parte.setValue(oSelectedItem.getDescription());\n\n\t\t\t\tvar info_parte = oSelectedItem.getTitle().split(\"||\");\n\n\t\t\t\tsap.ui.getCore().getElementById(\"grup_cod_parte\").setText(info_parte[0]);\n\t\t\t\tsap.ui.getCore().getElementById(\"cod_parte\").setText(info_parte[1]);\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\t\t},\n\n\t\tf_confirm_sintoma: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\n\t\t\tif (oSelectedItem) {\n\t\t\t\tvar cod_parte = sap.ui.getCore().getElementById(\"cod_sintoma_select\");\n\t\t\t\tcod_parte.setValue(oSelectedItem.getDescription());\n\n\t\t\t\tvar info_parte = oSelectedItem.getTitle().split(\"||\");\n\n\t\t\t\tsap.ui.getCore().getElementById(\"grup_cod_sintoma\").setText(info_parte[0]);\n\t\t\t\tsap.ui.getCore().getElementById(\"cod_sintoma\").setText(info_parte[1]);\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\t\t},\n\n\t\t/**\n\t\t * Abrir el Dialogo para tartar un Conjunto\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_dialogo_conjunto: function(event) {\n\t\t\tthis.f_visualiza_dlg_conjunto(\"com.corona.view.fragment.SelectConjunto\");\n\n\t\t\tvar getPath = event.getSource()._oSelectedItem.getBindingContext().getPath();\n\t\t\tvar BindingContext = event.getSource()._oSelectedItem.getBindingContext();\n\t\t\t//Se mapea Código de Material\n\t\t\tvar material = sap.ui.getCore().getElementById(\"cod_material_select\");\n\t\t\tmaterial.setValue(BindingContext.getProperty(\"Bautl\"));\n\t\t\t//Se mapea Descripción de Material.\n\t\t\tvar dec_material = sap.ui.getCore().getElementById(\"desc_material_select\");\n\t\t\tdec_material.setText(BindingContext.getProperty(\"Bautx\"));\n\n\t\t\t//Se mapea Sintoma.\n\t\t\tvar cod_sintoma = sap.ui.getCore().getElementById(\"cod_sintoma_select\");\n\t\t\tcod_sintoma.setValue(BindingContext.getProperty(\"Txtcdfe\"));\n\t\t\tsap.ui.getCore().getElementById(\"grup_cod_sintoma\").setText(BindingContext.getProperty(\"Fegrp\"));\n\t\t\tsap.ui.getCore().getElementById(\"cod_sintoma\").setText(BindingContext.getProperty(\"Fecod\"));\n\n\t\t\t//Se mapea Parte. \n\t\t\tvar cod_parte = sap.ui.getCore().getElementById(\"cod_parte_select\");\n\t\t\tcod_parte.setValue(BindingContext.getProperty(\"Txtcdot\"));\n\n\t\t\tsap.ui.getCore().getElementById(\"grup_cod_parte\").setText(BindingContext.getProperty(\"Otgrp\"));\n\t\t\tsap.ui.getCore().getElementById(\"cod_parte\").setText(BindingContext.getProperty(\"Oteil\"));\n\n\t\t\t//Se mapea Cantidad\n\t\t\tvar cantidad = sap.ui.getCore().getElementById(\"cantidad_select\");\n\t\t\tcantidad.setValue(BindingContext.getProperty(\"Canti\"));\n\n\t\t\tthis.Path_conjunto = getPath;\n\n\t\t\tthis._dialogo_conjunto.open();\n\t\t},\n\n\t\tf_visualiza_dlg_conjunto: function(p_Dialogo) {\n\t\t\tif (!this._dialogo_conjunto) {\n\t\t\t\tthis._dialogo_conjunto = sap.ui.xmlfragment(p_Dialogo, this);\n\t\t\t\tthis.getView().addDependent(this._dialogo_conjunto);\n\t\t\t}\n\t\t},\n\n\t\tf_dlg_crear_conjunto: function() {\n\t\t\tthis.f_visualiza_dlg_conjunto(\"com.corona.view.fragment.CrearConjunto\");\n\n\t\t\tsap.ui.getCore().getElementById(\"cod_material_select\").setValue(\"\");\n\t\t\tsap.ui.getCore().getElementById(\"desc_material_select\").setText(\"\");\n\n\t\t\t//Se limpia Cantidad\n\t\t\tsap.ui.getCore().getElementById(\"cantidad_select\").setValue(\"\");\n\n\t\t\t//Parte\n\t\t\tsap.ui.getCore().getElementById(\"grup_cod_parte\").setText(\"\");\n\t\t\tsap.ui.getCore().getElementById(\"cod_parte\").setText(\"\");\n\t\t\tsap.ui.getCore().getElementById(\"cod_parte_select\").setValue(\"\");\n\n\t\t\t//Sintoma\n\t\t\tsap.ui.getCore().getElementById(\"grup_cod_sintoma\").setText(\"\");\n\t\t\tsap.ui.getCore().getElementById(\"cod_sintoma\").setText(\"\");\n\t\t\tsap.ui.getCore().getElementById(\"cod_sintoma_select\").setValue(\"\");\n\n\t\t\tthis._dialogo_conjunto.open();\n\t\t},\n\t\t/**\n\t\t * Cerrar y destruir Dialogo Conjunto\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_close_dialogo_conjunto: function() {\n\t\t\tthis._dialogo_conjunto.close();\n\t\t\tthis._dialogo_conjunto.destroy(true);\n\t\t\tthis._dialogo_conjunto = undefined;\n\n\t\t\t//Se quita la fila que se tenia seleccionada.\n\t\t\tvar list_conju = this.getView().byId(\"lineItemsList\");\n\t\t\tlist_conju.removeSelections(true);\n\t\t\t//var fila_seleccionada = list_conju._oItemNavigation.iFocusedIndex;\n\t\t\t//list_conju.getItems()[fila_seleccionada - 1].setSelected(false);\n\t\t},\n\n\t\t/**\n\t\t * Actualizar Datos de Conjunto según lo digitado por el usuario.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_actualiza_conjunto: function() {\n\t\t\tvar oModel_conjunto = this.getView().byId(\"lineItemsList\").getModel();\n\t\t\t//Se mapea Código de Material\n\t\t\tvar material = sap.ui.getCore().getElementById(\"cod_material_select\");\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Bautl\", material.getValue());\n\t\t\tvar descri_material = sap.ui.getCore().getElementById(\"desc_material_select\");\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Bautx\", descri_material.getText());\n\n\t\t\tvar cod_sintoma = sap.ui.getCore().getElementById(\"cod_sintoma_select\").getValue();\n\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Txtcdfe\", cod_sintoma);\n\n\t\t\t//Grupo de Códigos Sintoma\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Fegrp\", sap.ui.getCore().getElementById(\"grup_cod_sintoma\").getText());\n\n\t\t\t//Código Sintoma\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Fecod\", sap.ui.getCore().getElementById(\"cod_sintoma\").getText());\n\n\t\t\t//Se mapea Parte.\n\t\t\tvar cod_parte = sap.ui.getCore().getElementById(\"cod_parte_select\").getValue();\n\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Txtcdot\", cod_parte);\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Otgrp\", sap.ui.getCore().getElementById(\"grup_cod_parte\").getText());\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Oteil\", sap.ui.getCore().getElementById(\"cod_parte\").getText());\n\n\t\t\t//Se mapea Cantidad\n\t\t\tvar cantidad = sap.ui.getCore().getElementById(\"cantidad_select\");\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Canti\", cantidad.getValue());\n\n\t\t\t//Marcar como Modificado.\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Opera\", 'U');\n\n\t\t\tthis.f_close_dialogo_conjunto();\n\t\t},\n\n\t\t/**\n\t\t * Enviar datos de modificación al ERP\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_modificar_dat_aviso: function() {\n\n\t\t\t//Ruta del aviso seleccionado\n\t\t\tvar BindingContext = this.getView().getBindingContext();\n\n\t\t\tvar oModel = new sap.ui.model.odata.ODataModel(BindingContext.oModel.sServiceUrl, true);\n\n\t\t\tvar pathAviso = BindingContext.getPath();\n\n\t\t\tvar oEntry = {};\n\n\t\t\toEntry.Bita = BindingContext.getProperty(\"Bita\"); //Ojo Modificar\n\n\t\t\toEntry.Name1 = BindingContext.getProperty(\"Name1\");\n\t\t\tif ((oEntry.Name1 === null) || (oEntry.Name1 === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Nombre es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.Name2 = BindingContext.getProperty(\"Name2\");\n\t\t\t\n\t\t\tif(oEntry.Name2 === null){\n\t\t\t\toEntry.Name2=\"\";\n\t\t\t}\n\t\t\t\n\t\t\toEntry.Celu = BindingContext.getProperty(\"Celu\"); // Ojo falta\n\t\t\tif ((oEntry.Celu === null) || (oEntry.Celu === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Celular es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.Tele = BindingContext.getProperty(\"Tele\");\n\t\t\tif ((oEntry.Tele === null) || (oEntry.Tele === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Teléfono es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.City1 = BindingContext.getProperty(\"City1\");\n\t\t\toEntry.Street2 = BindingContext.getProperty(\"Street2\");\n\t\t\tif ((oEntry.Street2 === null) || (oEntry.Street2 === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Calle 3 es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.Street = BindingContext.getProperty(\"Street\");\n\t\t\tif ((oEntry.Street === null) || (oEntry.Street === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Calle es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.Statusr = BindingContext.getProperty(\"Statusr\");\n\t\t\toEntry.Adrnr = BindingContext.getProperty(\"Adrnr\");\n\n\t\t\t//Tipo de Usuario\n\t\t\toEntry.Qmcod = this.getView().byId(\"cmb_tip_usr\").getSelectedKey();\n\n\t\t\t//Grupo de Códigos Tipo de Usuario\n\t\t\toEntry.Qmgrp = BindingContext.getProperty(\"Qmgrp\");\n\n\t\t\t//Prioridad\n\t\t\toEntry.Priori = this.getView().byId(\"cmb_prioridad\").getSelectedKey();\n\n\t\t\toEntry.Arbpl = BindingContext.getProperty(\"Arbpl\");\n\n\t\t\toEntry.Werks = BindingContext.getProperty(\"Werks\");\n\t\t\toEntry.Qmnum = BindingContext.getProperty(\"Qmnum\");\n\t\t\toEntry.Qmart = BindingContext.getProperty(\"Qmart\");\n\n\t\t\toEntry.Artpr = BindingContext.getProperty(\"Artpr\");\n\t\t\toEntry.Qmdat = BindingContext.getProperty(\"Qmdat\");\n\t\t\toEntry.Mzeit = BindingContext.getProperty(\"Mzeit\");\n\n\t\t\toEntry.Qmtxt = BindingContext.getProperty(\"Qmtxt\");\n\t\t\toEntry.Rbnr = BindingContext.getProperty(\"Rbnr\");\n\n\t\t\tif (BindingContext.getProperty(\"Primcr\") !== 'X') {\n\t\t\t\tif (this.getView().byId(\"check_primer_contac\").getSelected()) {\n\t\t\t\t\toEntry.Primc = 'X';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toEntry.Bita_c = BindingContext.getProperty(\"Bita_c\");\n\n\t\t\t//Abrir el mensaje para indicar que los datos se vanb a cargar\n\t\t\tthis.f_dialogo_progreso(\"com.corona.view.fragment.DlgGuardaAviso\");\n\n\t\t\tthis._timeout = jQuery.sap.delayedCall(2000, this, function() {\n\n\t\t\t\tvar obj_this = this;\n\n\t\t\t\tvar fnSucess = function(data, response) {\n\t\t\t\t\tvar mensaje;\n\n\t\t\t\t\tobj_this.f_modificar_conjunto(function() {\n\t\t\t\t\t\tobj_this.f_MessageSuccesDialog(\"Los datos se Guardaron Exitosamente\");\n\t\t\t\t\t\tobj_this.f_close_dialogo_progreso();\n\t\t\t\t\t});\n\t\t\t\t\t//obj_this.f_MessageSuccesDialog(\"Los datos se Guardaron Exitosamente\");\n\t\t\t\t};\n\n\t\t\t\tvar fnError = function(sError) {\n\t\t\t\t\tvar error;\n\t\t\t\t\tif (sError.response.body) {\n\t\t\t\t\t\terror = JSON.parse(sError.response.body);\n\t\t\t\t\t\tobj_this.f_MessageErrorDialog(error.error.message.value);\n\t\t\t\t\t\tobj_this.f_close_dialogo_progreso();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\toModel.update(pathAviso, oEntry, null, fnSucess, fnError, false);\n\n\t\t\t});\n\t\t},\n\n\t\tf_modificar_conjunto: function(callback) {\n\t\t\tvar list_conjuntos = this.getView().byId(\"lineItemsList\").getItems();\n\n\t\t\tvar modelo_conju = this.getView().byId(\"lineItemsList\").getModel();\n\n\t\t\tvar numero_item = list_conjuntos.length;\n\t\t\tvar conjunto;\n\t\t\tvar context;\n\t\t\tvar path;\n\n\t\t\tvar oEntry = {};\n\n\t\t\tvar i = 0;\n\n\t\t\tvar obj_this = this;\n\n\t\t\tvar fnSucess = function(data, response) {\n\t\t\t\tvar mensaje;\n\t\t\t\t//obj_this.f_close_dialogo_progreso();\n\t\t\t\t//obj_this.f_MessageSuccesDialog(\"Los datos se Guardaron Exitosamente\");\n\t\t\t};\n\n\t\t\tvar fnError = function(sError) {\n\t\t\t\tvar error;\n\t\t\t\tif (sError.response.body) {\n\t\t\t\t\terror = JSON.parse(sError.response.body);\n\t\t\t\t\tobj_this.f_MessageErrorDialog(error.error.message.value);\n\t\t\t\t\t//obj_this.f_close_dialogo_progreso();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twhile (i < numero_item) {\n\t\t\t\tconjunto = list_conjuntos[i];\n\t\t\t\tcontext = conjunto.getBindingContext();\n\t\t\t\tpath = context.getPath();\n\t\t\t\tvar oModel = new sap.ui.model.odata.ODataModel(context.getModel().sServiceUrl, true);\n\n\t\t\t\tswitch (context.getProperty(\"Opera\")) {\n\t\t\t\t\tcase 'U': //Actualizar\n\t\t\t\t\t\toEntry.Qmnum = context.getProperty(\"Qmnum\");\n\t\t\t\t\t\toEntry.Idpos = context.getProperty(\"Idpos\");\n\t\t\t\t\t\toEntry.Bautl = context.getProperty(\"Bautl\");\n\t\t\t\t\t\toEntry.Bautx = context.getProperty(\"Bautx\");\n\t\t\t\t\t\toEntry.Canti =  context.getProperty(\"Canti\");\n\t\t\t\t\t\toEntry.Otgrp = context.getProperty(\"Otgrp\");\n\t\t\t\t\t\toEntry.Oteil = context.getProperty(\"Oteil\");\n\t\t\t\t\t\toEntry.Txtcdot = context.getProperty(\"Txtcdot\");\n\t\t\t\t\t\toEntry.Fegrp = context.getProperty(\"Fegrp\");\n\t\t\t\t\t\toEntry.Fecod = context.getProperty(\"Fecod\");\n\t\t\t\t\t\toEntry.Txtcdfe = context.getProperty(\"Txtcdfe\");\n\t\t\t\t\t\toEntry.Posnr = (i + 1).toString();\n\t\t\t\t\t\toEntry.Opera = context.getProperty(\"Opera\");\n\n\t\t\t\t\t\toModel.update(path, oEntry, null, fnSucess, fnError, false);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'D': //Eliminar\n\t\t\t\t\t\toModel.remove(path, null, fnSucess, fnError, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tcallback();\n\t\t},\n\n\t\tf_crear_conjunto: function() {\n\n\t\t\t//Se obtiene el contexto para los datos del Aviso Seleccionado\n\t\t\tvar context = this.getView().getBindingContext();\n\n\t\t\tvar oEntry = {};\n\t\t\tvar oModel = new sap.ui.model.odata.ODataModel(context.getModel().sServiceUrl, true);\n\n\t\t\toEntry.Qmnum = context.getProperty(\"Qmnum\");\n\t\t\toEntry.Idpos = '0000';\n\n\t\t\toEntry.Bautl = sap.ui.getCore().getElementById(\"cod_material_select\").getValue();\n\n\t\t\tif ((oEntry.Bautl === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Material es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\t\t\t\n\n\t\t\toEntry.Bautx = sap.ui.getCore().getElementById(\"desc_material_select\").getText();\n\n\t\t\t//Se mapea Cantidad\n\t\t\tvar cantidad = sap.ui.getCore().getElementById(\"cantidad_select\");\n\t\t\toEntry.Canti = cantidad.getValue();\n\t\t\t\n\t\t\tif ((oEntry.Canti === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Cantidad es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Parte\n\t\t\toEntry.Otgrp = sap.ui.getCore().getElementById(\"grup_cod_parte\").getText();\n\t\t\toEntry.Oteil = sap.ui.getCore().getElementById(\"cod_parte\").getText();\n\t\t\toEntry.Txtcdot = sap.ui.getCore().getElementById(\"cod_parte_select\").getValue();\n\n\t\t\tif ((oEntry.Txtcdot === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Parte es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Sintoma\n\t\t\toEntry.Fegrp = sap.ui.getCore().getElementById(\"grup_cod_sintoma\").getText();\n\t\t\toEntry.Fecod = sap.ui.getCore().getElementById(\"cod_sintoma\").getText();\n\t\t\toEntry.Txtcdfe = sap.ui.getCore().getElementById(\"cod_sintoma_select\").getValue();\n\n\t\t\tif ((oEntry.Txtcdfe === \"\")) {\n\t\t\t\tthis.f_MessageErrorDialog(\"El campo Sintoma es Obligatorio\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar pos = 2;\n\t\t\toEntry.Posnr = pos.toString();\n\t\t\toEntry.Opera = '3';\n\n\t\t\t//Abrir el mensaje para indicar que los datos se vanb a cargar\n\t\t\tthis.f_dialogo_progreso(\"com.corona.view.fragment.DlgGuardaAviso\");\n\n\t\t\tthis._timeout = jQuery.sap.delayedCall(2000, this, function() {\n\t\t\t\tvar obj_this = this;\n\t\t\t\tvar fnSucess = function(data, response) {\n\t\t\t\t\tvar mensaje;\n\t\t\t\t\tobj_this.f_close_dialogo_progreso();\n\t\t\t\t\tobj_this.f_MessageSuccesDialog(\"Los datos se Guardaron Exitosamente\");\n\t\t\t\t};\n\n\t\t\t\tvar fnError = function(sError) {\n\t\t\t\t\tvar error;\n\t\t\t\t\tif (sError.response.body) {\n\t\t\t\t\t\terror = JSON.parse(sError.response.body);\n\t\t\t\t\t\tobj_this.f_MessageErrorDialog(error.error.message.value);\n\t\t\t\t\t\tobj_this.f_close_dialogo_progreso();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\toModel.create('/ConjuntoSet', oEntry, null, fnSucess, fnError, false);\n\t\t\t\t\n\t\t\t\tthis.f_close_dialogo_conjunto();\n\t\t\t\tthis.byId(\"lineItemsList\").getBinding(\"items\").filter([]);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Abrir Dialogo de Error\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_MessageErrorDialog: function(sError) {\n\t\t\tvar dialog = new Dialog({\n\t\t\t\ttitle: 'Error',\n\t\t\t\ttype: 'Message',\n\t\t\t\tstate: 'Error',\n\t\t\t\tcontent: new Text({\n\t\t\t\t\ttext: sError\n\t\t\t\t}),\n\t\t\t\tbeginButton: new Button({\n\t\t\t\t\ttext: 'OK',\n\t\t\t\t\tpress: function() {\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tafterClose: function() {\n\t\t\t\t\tdialog.destroy();\n\t\t\t\t}\n\t\t\t});\n\t\t\tdialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Abrir Dialogo de Exito\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tf_MessageSuccesDialog: function(sMensaje) {\n\t\t\tvar dialog = new Dialog({\n\t\t\t\ttitle: 'Success',\n\t\t\t\ttype: 'Message',\n\t\t\t\tstate: 'Success',\n\t\t\t\tcontent: new Text({\n\t\t\t\t\ttext: sMensaje\n\t\t\t\t}),\n\t\t\t\tbeginButton: new Button({\n\t\t\t\t\ttext: 'OK',\n\t\t\t\t\tpress: function() {\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tafterClose: function() {\n\t\t\t\t\tdialog.destroy();\n\t\t\t\t}\n\t\t\t});\n\t\t\tdialog.open();\n\t\t},\n\n\t\t//Funcion para invocar la ventana de dialogo\n\t\tf_dialogo_progreso: function(p_ruta_dialogo) {\n\t\t\t// instantiate dialog\n\t\t\tif (!this.obj_dialogo_progreso) {\n\t\t\t\tthis.obj_dialogo_progreso = sap.ui.xmlfragment(p_ruta_dialogo, this);\n\t\t\t\tthis.getView().addDependent(this.obj_dialogo_progreso);\n\t\t\t}\n\t\t\t// open dialog\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this.obj_dialogo_progreso);\n\t\t\tthis.obj_dialogo_progreso.open();\n\t\t},\n\n\t\t//Funcion para cerrar la ventada de dialogo cuandos elecciono un cliente\n\t\tf_close_dialogo_progreso: function() {\n\t\t\tif (this.obj_dialogo_progreso) {\n\t\t\t\tthis.obj_dialogo_progreso.close();\n\t\t\t}\n\t\t},\n\n\t\tf_elimina_conju: function() {\n\t\t\tvar oModel_conjunto = this.getView().byId(\"lineItemsList\").getModel();\n\n\t\t\t//Asignar operación de Eliminar.\n\t\t\toModel_conjunto.setProperty(this.Path_conjunto + \"/Opera\", 'D');\n\n\t\t\tthis.f_cancelDialog();\n\t\t\tthis.f_close_dialogo_conjunto();\n\t\t},\n\n\t\tf_confir_elimina_conjunto: function(oEvent) {\n\t\t\tvar mostrar_dlg =  this.f_Dialog_EliminaConjunto(\"¿Esta seguro que quiere eliminar el registro?\");\n\t\t\tif(mostrar_dlg){\n\t\t\t\tsap.ui.getCore().byId(\"Dialog1\").open();\n\t\t\t}\n\t\t},\n\n\t\t//Dialogo al momento de Cerrar la Visita\n\t\tf_Dialog_EliminaConjunto: function(p_msj) {\n\n\t\t\tvar list_conjuntos = this.getView().byId(\"lineItemsList\").getItems();\n\t\t\tvar numero_item = list_conjuntos.length;\n\n\t\t\tif (numero_item <= 1) {\n\t\t\t\tthis.f_MessageErrorDialog(\"Debe existir una posición en la lista de Conjuntos\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tvar list_conjuntos = this.getView().byId(\"lineItemsList\").getItems();\n\t\t\tvar num_item = list_conjuntos.length;\n\t\t\tvar i= 0;\n\t\t\tvar dat_elimi = 0;\n\t\t\t\n\t\t\tvar conjunto,\n\t\t\t\tcontext;\n\t\t\twhile(i < num_item){\n\t\t\t\tconjunto = list_conjuntos[i];\n\t\t\t\tcontext = conjunto.getBindingContext();\n\t\t\t\t\n\t\t\t\tif(context.getProperty(\"Opera\") === 'D'){\n\t\t\t\t\tdat_elimi = dat_elimi + 1;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\t\n\t\t\tif (dat_elimi === (num_item -1)) {\n\t\t\t\tthis.f_MessageErrorDialog(\"Debe existir una posición en la lista de Conjuntos\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar buttonConfirmar = new sap.m.Button(\"Confirmar_\" + Math.floor((Math.random() * 2000) + 1), {\n\t\t\t\ttext: \"Si\",\n\t\t\t\ttap: [\n\t\t\t\t\tthis.f_elimina_conju,\n\t\t\t\t\tthis\n\t\t\t\t]\n\t\t\t});\n\t\t\tvar buttonCancelar = new sap.m.Button(\"Cancelar_\" + Math.floor((Math.random() * 2000) + 1), {\n\t\t\t\ttext: \"No\",\n\t\t\t\ttap: [\n\t\t\t\t\tthis.f_cancelDialog,\n\t\t\t\t\tthis\n\t\t\t\t]\n\t\t\t});\n\t\t\tvar msj_Dialog_error = new sap.m.Dialog(\"Dialog1\", {\n\t\t\t\ttitle: \"Eliminar datos Conjunto\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tstate: \"Warning\",\n\t\t\t\tmodal: true,\n\t\t\t\tbuttons: [\n\t\t\t\t\tbuttonConfirmar,\n\t\t\t\t\tbuttonCancelar\n\t\t\t\t],\n\t\t\t\tcontent: [new sap.m.Text({\n\t\t\t\t\ttext: p_msj,\n\t\t\t\t\twrapping: true\n\t\t\t\t})]\n\t\t\t});\n\t\t\t\n\t\t\treturn true;\n\t\t},\n\n\t\tf_cancelDialog: function() {\n\t\t\tif (sap.ui.getCore().byId(\"Dialog1\")) {\n\t\t\t\tsap.ui.getCore().byId(\"Dialog1\").close();\n\t\t\t\tsap.ui.getCore().byId(\"Dialog1\").destroy();\n\t\t\t}\n\t\t}\n\t});\n});",
		"com/corona/controller/ErrorHandler.js": "//Libreria de Utilidades.\r\njQuery.sap.require(\"com.corona/controller/Utilidades\");\r\n\r\nsap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"com.corona.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias com.corona.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\t\r\n\t\t\t//Add @netw - Obtener mensaje de Error del \r\n\t\t\tvar msjError;\r\n\t\t\tmsjError = f_obtener_msj_error(sDetails);\r\n\t\t\t\r\n\t\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\t\r\n\t\t\t//Add @netw - Asignar mensaje de error\r\n\t\t\tthis._sErrorText = msjError;\r\n\t\t\t\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\t//details: sDetails.responseText, //Comentado @netw\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"com.corona.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias com.corona.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"com/corona/model/formatter\",\r\n\t\"sap/m/MessageBox\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.Master\", {\r\n\t\toPersonalizationDialog: null,\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\tthis._findItem();\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\r\n\t\t\tif (!this.abrir_dialogo) {\r\n\t\t\t\tthis.abrir_dialogo = true;\r\n\t\t\t\t//Agregar Dialogo\r\n\t\t\t\tthis.f_open_dialog_login();\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Qmtxt\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar fnLeave = function() {\r\n\t\t\t\tthat._oODataModel.resetChanges();\r\n\t\t\t\tthat._showDetail(oItem);\r\n\t\t\t};\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis._leaveEditPage(fnLeave);\r\n\t\t\t} else {\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack_: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonAdd: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"create\");\r\n\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Creates the model for the view\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"Qmtxt\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n\t\t * @param {object} fnLeave - handles discard changes\r\n\t\t * @param {object} fnLeaveCancelled - handles cancel\r\n\t\t * @private\r\n\t\t */\r\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\t\t\t\r\n\t\t\tfnLeave();\r\n\t\t\t\r\n/*\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: sTitle,\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnLeave();\r\n\t\t\t\t\t} else if (fnLeaveCancelled) {\r\n\t\t\t\t\t\tfnLeaveCancelled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});*/\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\t\tArbpl: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Arbpl\")),\r\n\t\t\t\t\t\t\tWerks: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Werks\")),\r\n\t\t\t\t\t\t\tQmnum: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmnum\")),\r\n\t\t\t\t\t\t\tQmart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmart\")),\r\n\t\t\t\t\t\t\tArtpr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Artpr\")),\r\n\t\t\t\t\t\t\tRbnr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Rbnr\")),\r\n\t\t\t\t\t\t\tQmgrp: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmgrp\"))\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//this.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\r\n\t\t\t//Add jgiraldo \r\n\t\t\tif (!this.filtroIngreso) {\r\n\t\t\t\tthis.filtroIngreso = true;\r\n\t\t\t\tthis.f_filtro_aviso(null, null);\r\n\t\t\t} else {\r\n\t\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\t\tthis._oList.getBinding(\"items\").bClientOperation = false;\r\n\t\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Server;\r\n\r\n\t\t\t\tthis.f_filtro_aviso(combo_centro.getSelectedKey(), combo_puesto.getSelectedKey());\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//Add Jhony\r\n\t\t_getDialog: function() {\r\n\t\t\tif (this.oPersonalizationDialog) {\r\n\t\t\t\treturn this.oPersonalizationDialog;\r\n\t\t\t}\r\n\r\n\t\t\t// associate controller with the fragment\r\n\t\t\tthis.oPersonalizationDialog = sap.ui.xmlfragment(\"com.corona.view.fragment.SelectCentroPuestoT\", this);\r\n\t\t\tthis.getView().addDependent(this.oPersonalizationDialog);\r\n\t\t\treturn this.oPersonalizationDialog;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tArbpl: encodeURIComponent(oItem.getBindingContext().getProperty(\"Arbpl\")),\r\n\t\t\t\tWerks: encodeURIComponent(oItem.getBindingContext().getProperty(\"Werks\")),\r\n\t\t\t\tQmnum: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmnum\")),\r\n\t\t\t\tQmart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmart\")),\r\n\t\t\t\tArtpr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Artpr\")),\r\n\t\t\t\tRbnr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Rbnr\")),\r\n\t\t\t\tQmgrp: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmgrp\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that adds \"/\" to the item's path \r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnGetPathWithSlash: function(sPath) {\r\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_findItem: function() {\r\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n\t\t\tif (itemToSelect) {\r\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n\t\t\t\t\tif (oItem) {\r\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//this.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Se comenta código Generado por el Template para que no muestre el detalle @netw.\r\n\t\t\t\tif (!Device.system.phone) {\r\n\t\t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n\t\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tf_filtro_aviso: function(p_centro, p_puesto) {\r\n\t\t\tvar filters = [];\r\n\t\t\tvar sFilter;\r\n\t\t\tvar query = p_puesto;\r\n\t\t\t\r\n\t\t\t//Add Jhony Giraldo\r\n\t\t\tif(p_centro === null){\r\n\t\t\t\tthis._oList.getBinding(\"items\").filter(filters);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Arbpl\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\r\n\t\t\tquery = p_centro;\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\r\n\t\t\tvar binding = this._oList.getBinding(\"items\");\r\n\t\t\tbinding.filter(filters);\r\n\t\t},\r\n\r\n\t\tf_get_puestos: function() {\r\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\tcombo_puesto.setBusy(true);\r\n\r\n\t\t\tvar filters = [];\r\n\t\t\tvar sFilter;\r\n\t\t\tvar query = combo_centro.getSelectedKey();\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\t\t\tvar binding = combo_puesto.getBinding(\"items\");\r\n\t\t\tbinding.filter(filters);\r\n\r\n\t\t\tcombo_puesto.setBusy(false);\r\n\t\t},\r\n\r\n\t\tf_close_dialogo_puest_centr: function() {\r\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\tthis._oList.getBinding(\"items\").bClientOperation = false;\r\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Server;\r\n\r\n\t\t\tthis.f_filtro_aviso(combo_centro.getSelectedKey(), combo_puesto.getSelectedKey());\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t},\r\n\r\n\t\tf_open_dialog_login: function() {\r\n\t\t\t//Agregar Dialogo\r\n\t\t\tvar oPersonalizationDialog = this._getDialog();\r\n\t\t\toPersonalizationDialog.open();\r\n\t\t},\r\n\r\n\t\tf_retornar_launchpad: function() {\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\t// The history contains a previous entry\r\n\t\t\thistory.go(-1);\r\n\t\t},\r\n\r\n\t\tf_buscar_avisos: function(evt) {\r\n\t\t\tif (!this.esprimerfiltro) {\r\n\t\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\r\n\r\n\t\t\t\tvar puesto_tra = sap.ui.getCore().getElementById(\"cmb_puesto_tra\").getSelectedKey();\r\n\t\t\t\tvar centro = sap.ui.getCore().getElementById(\"cmb_centro\").getSelectedKey();\r\n\r\n\t\t\t\tthis.f_filtro_aviso(centro, puesto_tra);\r\n\t\t\t}\r\n\r\n\t\t\tvar filers = [],\r\n\t\t\t\tquery = evt.getParameters().query,\r\n\t\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmnum\", sap.ui.model.FilterOperator.Contains, query);\r\n\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmtxt\", sap.ui.model.FilterOperator.Contains, query);\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Name1\", sap.ui.model.FilterOperator.Contains, query);\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tvar oFilter = new sap.ui.model.Filter({\r\n\t\t\t\taFilters: filers,\r\n\t\t\t\tbAnd: false,\r\n\t\t\t\t_bMultiFilter: true\r\n\t\t\t});\r\n\r\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\r\n\t\t\tthis._oList.getBinding(\"items\").filter([oFilter]);\r\n\t\t},\r\n\t\t\r\n\t\tonNavBack: function() {\r\n\t\t\tthis.f_retornar_launchpad();\r\n\t\t}\r\n\t});\r\n});",
		"com/corona/controller/Utilidades.js": "/**\n * Recibe un String XML y obtiene de este String el Error ocurrido en la ejecución del Servicio\n * @param {string} sError Error en formato XML\n * @public\n */\nfunction f_obtener_msj_error(sError){\n\t//Se hace un Split por el Tag <message> del XML\n\tvar ls_message = sError.responseText.split(\"<message>\"); \n\t\n\t//Luego se realiza otro Split por el Tag de finalización del Error </message>\n\tvar ls_error  = ls_message[1].split(\"</message>\");\n\t\n\t//Se hizo la validación y en el tag <message> </message> siempre trae el mismo mensaje\n\t//por lo tanto se escoge el primer mensaje\n\treturn ls_error[0];\n}",
		"com/corona/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"com/corona/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"AvisoSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"com.corona.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias com.corona.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by Qmtxt, or by \r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by , or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Qmtxt\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"com/corona/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/view/App.view.xml": "<mvc:View controllerName=\"com.corona.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\"/>\n</mvc:View>",
		"com/corona/view/CreateEntity.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\" controllerName=\"com.corona.controller.CreateEntity\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\" busy=\"{viewModel>/busy}\">\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\" labelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\" title=\"{= ${viewModel>/mode} === 'edit'? 'Datos generales del Aviso': 'New ZGWSD_PRIMERCONTACTO_SRV.Avisos'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"# Aviso\"/>\n\t\t\t\t\t<Input name=\"Qmnum\" id=\"Qmnum_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\" value=\"{ path: 'Qmnum', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Status usuario\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"txt_status_usr\" value=\"{Statusr}\" class=\"sapUiSmallMarginBottom\" type=\"Text\" placeholder=\"Seleccione Status\" enabled=\"true\" editable=\"true\" showValueHelp=\"true\" valueHelpRequest=\"handleValueHelp\"/>\n\n\t\t\t\t\t<Label text=\"Prioridad\" required=\"true\"/>\n\t\t\t\t\t<Select id=\"cmb_prioridad\" items=\"{PrioridadSet}\" width=\"100%\">\n\t\t\t\t\t\t<core:Item key=\"{Priok}\" text=\"{Priokx}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"Tipo Usuario\" required=\"true\"/>\n\t\t\t\t\t<Select id=\"cmb_tip_usr\" items=\"{TipoUsuarioSet}\" width=\"100%\">\n\t\t\t\t\t\t<core:Item key=\"{Code}\" text=\"{Text}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"Primero Contacto\"/>\n\t\t\t\t\t<CheckBox id=\"primer_contac\"/>\n\t\t\t\t\t<Label text=\"PtoTbjo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Arbpl\" id=\"Arbpl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Arbpl', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Ctro.p.pto.tbj.\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Werks\" id=\"Werks_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Werks', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Clase de aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmart\" id=\"Qmart_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Qmart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Cl.prioridad\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Artpr\" id=\"Artpr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Artpr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Calle\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Street\" id=\"Street_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Street', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:60, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Fecha de aviso\" required=\"true\"/>\n\t\t\t\t\t<DatePicker name=\"Qmdat\" value=\"{ path: 'Qmdat', type: 'sap.ui.model.type.DateTime'}\" id=\"Qmdat_id\" type=\"DateTime\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\"/>\n\t\t\t\t\t<Label text=\"Hora del aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Mzeit\" id=\"Mzeit_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Mzeit', type: 'sap.ui.model.odata.type.Time' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Descripción\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmtxt\" id=\"Qmtxt_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Qmtxt', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Nombre 2\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Name2\" id=\"Name2_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Name2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Perfil catálogo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Rbnr\" id=\"Rbnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Rbnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:9, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Nombre\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Name1\" id=\"Name1_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Name1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Grupo códigos\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmgrp\" id=\"Qmgrp_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"false\" value=\"{ path: 'Qmgrp', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Nº dirección\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Adrnr\" id=\"Adrnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Adrnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\n\t\t\t<f:SimpleForm class=\"editableForm\" editable=\"true\" id=\"dat_direccion\" layout=\"ResponsiveGridLayout\" minWidth=\"1024\" title=\"\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Panel class=\"sapUiResponsiveMargin\" width=\"auto\" headerText=\"Dirección aviso\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Label text=\"Celular\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Celu\" id=\"Celu_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Celu', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:false } }\"/>\n\t\t\t\t\t\t\t<Label text=\"Teléfono\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Tele\" id=\"Tele_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Tele', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:false } }\"/>\n\t\t\t\t\t\t\t<Label text=\"Población\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"City1\" id=\"City1_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\" value=\"{ path: 'City1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\t\t\t\t\t\t\t<Label text=\"Calle 3\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Street2\" id=\"Street2_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Street2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Historial\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t\t\t<content/>\n\t\t\t\t\t\n\t\t\t\t\t\t<TextArea width=\"100%\" name=\"Bita\" id=\"Bita_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"true\" value=\"{ path: 'Bita', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t\t<TextArea width=\"100%\"  name=\"Bita\" id=\"Bita_edit\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"\"/>\t\n\t\t\t\t\t</Panel>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"save\" enabled=\"{viewModel>/enableCreate}\" press=\"onSave\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"/>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/corona/view/Detail.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" controllerName=\"com.corona.controller.Detail\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"Número Aviso: {Qmnum}\" intro=\"{Werks} - {Puest}\" iconActive=\"false\"/>\n\t\t\t\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\" labelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\" title=\"{= ${viewModel>/mode} === 'edit'? 'Datos generales del Aviso': 'New ZGWSD_PRIMERCONTACTO_SRV.Avisos'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"# Aviso\"/>\n\t\t\t\t\t<Input name=\"Qmnum\" id=\"Qmnum_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"false\" value=\"{ path: 'Qmnum', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t\n\t\t\t\t\t<Label text=\"Status usuario\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"txt_status_usr\" value=\"{Textst}\" class=\"sapUiSmallMarginBottom\" valueHelpOnly=\"true\" type=\"Text\" placeholder=\"Seleccione Status\" enabled=\"true\" editable=\"true\" showValueHelp=\"true\" valueHelpRequest=\"handleValueHelp\"/>\n\n\t\t\t\t\t<Label text=\"Prioridad\" required=\"true\"/>\n\t\t\t\t\t<Select id=\"cmb_prioridad\" items=\"{PrioridadSet}\" width=\"100%\">\n\t\t\t\t\t\t<core:Item key=\"{Priok}\" text=\"{Priokx}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"Tipo Usuario\" required=\"true\"/>\n\t\t\t\t\t<Select id=\"cmb_tip_usr\" items=\"{TipoUsuarioSet}\" width=\"100%\">\n\t\t\t\t\t\t<core:Item key=\"{Code}\" text=\"{Text}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"Primero Contacto\"/>\n\t\t\t\t\t<CheckBox id=\"check_primer_contac\"/>\n\t\t\t\t\t<Label text=\"PtoTbjo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Arbpl\" id=\"Arbpl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Arbpl', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Ctro.p.pto.tbj.\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Werks\" id=\"Werks_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Werks', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Clase de aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmart\" id=\"Qmart_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Qmart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Cl.prioridad\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Artpr\" id=\"Artpr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Artpr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\"/>\n\t\t\t\t\t\n\t\t\t\t\t<Label text=\"Fecha de aviso\" required=\"true\"/>\n\t\t\t\t\t<DatePicker name=\"Qmdat\" value=\"{ path: 'Qmdat', type: 'sap.ui.model.type.DateTime'}\" id=\"Qmdat_id\" type=\"DateTime\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\"/>\n\t\t\t\t\t<Label text=\"Hora del aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Mzeit\" id=\"Mzeit_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Mzeit', type: 'sap.ui.model.odata.type.Time' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Descripción\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmtxt\" id=\"Qmtxt_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Qmtxt', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\"/>\n\n\t\t\t\t\t<Label text=\"Perfil catálogo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Rbnr\" id=\"Rbnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Rbnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:9, nullable:false } }\"/>\n\n\t\t\t\t\t<Label text=\"Grupo códigos\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmgrp\" id=\"Qmgrp_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"false\" value=\"{ path: 'Qmgrp', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Nº dirección\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Adrnr\" id=\"Adrnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"false\" value=\"{ path: 'Adrnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\n\t\t\t<f:SimpleForm class=\"editableForm\" editable=\"true\" id=\"dat_direccion\" layout=\"ResponsiveGridLayout\" minWidth=\"1024\" title=\"\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Panel class=\"sapUiResponsiveMargin\" width=\"auto\" headerText=\"Dirección aviso\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Label text=\"Nombre\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Name1\" id=\"Name1_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Name1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:true } }\"/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Nombre 2\"/>\n\t\t\t\t\t\t\t<Input name=\"Name2\" id=\"Name2_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Name2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:true } }\"/>\n\n\n\t\t\t\t\t\t\t<Label text=\"Población\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"City1\" id=\"City1_id\" enabled=\"false\" visible=\"true\" value=\"{ path: 'City1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:true } }\"/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Calle 3\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Street2\" id=\"Street2_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Street2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:true } }\"/>\n\n\t\t\t\t\t\t\t<Label text=\"Calle\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Street\" id=\"Street_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Street', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:60, nullable:true } }\"/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Teléfono\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Tele\" id=\"Tele_id\" enabled=\"true\" type=\"Tel\" visible=\"true\" value=\"{ path: 'Tele', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:true } }\"/>\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Celular\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input name=\"Celu\" id=\"Celu_id\" valueLiveUpdate=\"true\" type=\"Number\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Celu', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:true } }\"/>\n\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Historial\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t\t\t<content/>\n\t\t\t\t\t\n\t\t\t\t\t\t<TextArea width=\"100%\" name=\"Bita\" id=\"Bita_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"true\" value=\"{ path: 'Bita', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t\t<TextArea width=\"100%\" name=\"Bita\" id=\"Bita_edit\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"{ path: 'Bita_c', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"/>\t\n\t\t\t\t\t</Panel>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\n\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Conjuntos\" expandable=\"true\" expanded=\"false\">\n\t\t\t<Table visible=\"true\" id=\"lineItemsList\" width=\"auto\" mode=\"SingleSelectMaster\" items=\"{ConjuntosAviso}\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"\" selectionChange=\"f_dialogo_conjunto\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"__item12\" visible=\"{= ${Opera} !== 'D' ? true : false}\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Input id=\"cod_material\" value=\"{Bautl}\" showValueHelp=\"true\" valueHelpRequest=\"f_ayuda_busqueda_material\" editable=\"false\"/>\n\t\t\t\t\t\t\t<Label id=\"text_material\" text=\"{Bautx}\"/>\n\t\t\t\t\t\t\t<Input id=\"cantidad\" type=\"Number\" value=\"{Canti}\" editable=\"false\"/>\n\t\t\t\t\t\t\t<Input visible=\"false\" editable=\"false\" id=\"cod_sintoma\" value=\"{Fecod}\" showValueHelp=\"true\" valueHelpRequest=\"f_ayuda_busqueda_sint\">\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Input visible=\"false\" editable=\"false\" id=\"cod_parte\" value=\"{Oteil}\" showValueHelp=\"true\" valueHelpRequest=\"f_ayuda_busqueda_parte\">\n\t\t\t\t\t\t\t</Input>\n\t\t\n\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t\t\n\t\t\t\t<columns>\n\t\t\t\t\t<Column id=\"__columnfmoderno4\" mergeDuplicates=\"false\" width=\"30%\" >\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label id=\"lbl_material\" text=\"Material\" design=\"Bold\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"__columnfmoderno5\" mergeDuplicates=\"false\" width=\"50%\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label id=\"__label32\" text=\"Nombre\" design=\"Bold\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"__columfmodernon6_copy\" mergeDuplicates=\"false\" width=\"20%\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label text=\"Ctd.\" design=\"Bold\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t\n\t\t\t\t\t<Column id=\"colum_sintoma\" visible=\"false\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label text=\"Sintoma\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t\n\t\t\t\t\t<Column id=\"colum_parte\" visible=\"false\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label text=\"Parte\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t</Table>\n\t\t\t<core:Icon color=\"green\" id=\"btn_crear_conjunto\" press=\"f_dlg_crear_conjunto\" size=\"3em\" src=\"sap-icon://add-activity-2\" visible=\"true\"/>\n\t\t\t</Panel>\n\t\t\t <!--<mvc:XMLView viewName=\"com.corona.view.CreateEntity\"/> -->\n\t\t</semantic:content>\n\t\t<semantic:editAction>\n\t\t\t<semantic:EditAction id=\"edit\" press=\"onEdit\" visible=\"false\"/>\n\t\t</semantic:editAction>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button visible=\"false\" enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton visible=\"false\" id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t<semantic:saveAction>\n\t    <semantic:SaveAction id=\"modificar\" press=\"f_modificar_dat_aviso\"/>\n\t</semantic:saveAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/corona/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/fragment/CrearConjunto.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\r\n\t<Dialog class=\"sapUiContentPadding\" title=\"Datos Pos. Conjunto\" xmlns:l=\"sap.ui.layout\">\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Material\"/>\r\n\t\t\t\t\t<Input id=\"cod_material_select\" value=\"\" showValueHelp=\"true\" placeholder=\"Seleccione Material\"\r\n\t\t\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_material\" valueHelpOnly=\"true\" />\r\n\t\t\t\t\t<Label id=\"desc_material_select\" text=\"\"/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Cantidad\"/>\r\n\t\t\t\t\t<Input id=\"cantidad_select\" value=\"\" type=\"Number\" placeholder=\"Ingrese Cantidad\"/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Parte\"/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"cod_parte_select\"\r\n\t\t\t\t\t\tvalue=\"\"\r\n\t\t\t\t\t\tshowValueHelp=\"true\"\r\n\t\t\t\t\t\tvalueHelpOnly=\"true\"\r\n\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_parte\"\r\n\t\t\t\t\t\tplaceholder=\"Seleccione Parte\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</Input>\r\n\t\t\t\t\t<Label id=\"grup_cod_parte\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t<Label id=\"cod_parte\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Sintoma\"/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"cod_sintoma_select\"\r\n\t\t\t\t\t\tvalue=\"{Fecod}\"\r\n\t\t\t\t\t\tshowValueHelp=\"true\"\r\n\t\t\t\t\t\tvalueHelpOnly=\"true\"\r\n\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_sint\"\r\n\t\t\t\t\t\tplaceholder=\"Seleccione Sintoma\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</Input>\r\n\t\t\t\t\t<Label id=\"grup_cod_sintoma\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t<Label id=\"cod_sintoma\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t\t\r\n\t\t<beginButton>\r\n\t\t\t<Button id=\"btn_cancela_conjunto\" press=\"f_close_dialogo_conjunto\" text=\"Cancelar\" type=\"Reject\"/>\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button id=\"btn_conjunto_select\" press=\"f_crear_conjunto\" text=\"Guardar\" type=\"Accept\"/>\r\n\t\t</endButton>\r\n\t</Dialog>\r\n</core:FragmentDefinition>",
		"com/corona/view/fragment/DlgGuardaAviso.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<BusyDialog\r\n\t\ttitle=\"Guardando Datos Aviso.\"\r\n\t\ttext=\"Espera un momento por favor...\"\r\n\t\tshowCancelButton=\"false\" />\r\n</core:FragmentDefinition>",
		"com/corona/view/fragment/DlgMaterial.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_Material\"\n\t\ttitle=\"Seleccione Material\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\t\n\t\titems=\"{\n\t\t\tpath : '/MaterialSet'\n\t\t}\"\n\t\t\n\t\tsearch=\"f_Search_material\"\n\t\tconfirm=\"f_confirm_material\"\n\t\tcancel=\"f_confirm_material\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Matnr}\"\n\t\t\tdescription=\"{Maktx}\" />\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/view/fragment/DlgParte.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_parte\"\n\t\ttitle=\"Seleccione Parte\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\t\n\t\titems=\"{\n\t\t\tpath : 'ParteSet',\n\t\t\t\n\t\t\tsorter : {\n\t\t\t\tpath : 'Grupoc',\n\t\t\t\tgroup : true\n\t\t\t}\n\t\t}\"\n\t\t\n\t\tsearch=\"f_search_grupocod\"\n\t\tconfirm=\"f_confirm_parte\"\n\t\tcancel=\"f_confirm_parte\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Grupoc}||{Code}\"\n\t\t\tdescription=\"{Descod}\" />\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/view/fragment/DlgSintoma.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_sintoma\"\n\t\ttitle=\"Seleccione Sintoma\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\t\n\t\titems=\"{\n\t\t\tpath : 'SintomaSet',\n\t\t\t\n\t\t\tsorter : {\n\t\t\t\tpath : 'Grupoc',\n\t\t\t\tgroup : true\n\t\t\t}\n\t\t}\"\n\t\t\n\t\tsearch=\"f_search_grupocod\"\n\t\tconfirm=\"f_confirm_sintoma\"\n\t\tcancel=\"f_confirm_sintoma\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Grupoc}||{Code}\"\n\t\t\tdescription=\"{Descod}\" />\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/view/fragment/DlgStatus.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_status\"\n\t\ttitle=\"Estatus Usuario\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\titems=\"{StatusSet}\"\n\t\tsearch=\"_handleValueHelpSearch\"\n\t\tconfirm=\"_handleValueHelpClose\"\n\t\tcancel=\"_handleValueHelpClose\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Estat}\"\n\t\t\tdescription=\"{Txt04}-{Txt30}\" />\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/view/fragment/SelectCentroPuestoT.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\r\n\t<Dialog class=\"sapUiContentPadding\" title=\"Seleccione Centro - Puesto\" xmlns:l=\"sap.ui.layout\">\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Centro\"/>\r\n\t\t\t\t\t<Select id=\"cmb_centro\" items=\"{/CentroSet}\" change=\"f_get_puestos\" width=\"100%\">\r\n\t\t\t\t\t\t<core:Item key=\"{Werks}\" text=\"{Werks} - {Name1}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Puesto Trabajo\"/>\r\n\t\t\t\t\t<Select id=\"cmb_puesto_tra\" items=\"{/PuestoTrabajoSet}\" width=\"100%\" busy=\"true\">\r\n\t\t\t\t\t\t<core:Item key=\"{Arbpl}\" text=\"{Arbpl} - {Denomi}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t\t<beginButton>\r\n\t\t\t<Button id=\"btn_cancela_moderno\" press=\"f_close_dialogo_puest_centr\" text=\"Cancelar\" type=\"Back\"/>\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button id=\"btn_consu_avisos\" press=\"f_close_dialogo_puest_centr\" text=\"Ingresar\" type=\"Accept\"/>\r\n\t\t</endButton>\r\n\t</Dialog>\r\n</core:FragmentDefinition>",
		"com/corona/view/fragment/SelectConjunto.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\">\r\n\t<Dialog class=\"sapUiContentPadding\" title=\"Datos Pos. Conjunto\" xmlns:l=\"sap.ui.layout\">\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Material\"/>\r\n\t\t\t\t\t<Input id=\"cod_material_select\" value=\"\" showValueHelp=\"true\" placeholder=\"Seleccione Material\"\r\n\t\t\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_material\" valueHelpOnly=\"true\" />\r\n\t\t\t\t\t<Label id=\"desc_material_select\" text=\"\"/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Cantidad\"/>\r\n\t\t\t\t\t<Input id=\"cantidad_select\" value=\"\" type=\"Number\" placeholder=\"Ingrese Cantidad\"/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Parte\"/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"cod_parte_select\"\r\n\t\t\t\t\t\tvalue=\"\"\r\n\t\t\t\t\t\tshowValueHelp=\"true\"\r\n\t\t\t\t\t\tvalueHelpOnly=\"true\"\r\n\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_parte\"\r\n\t\t\t\t\t\tplaceholder=\"Seleccione Parte\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</Input>\r\n\t\t\t\t\t<Label id=\"grup_cod_parte\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t<Label id=\"cod_parte\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Sintoma\"/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"cod_sintoma_select\"\r\n\t\t\t\t\t\tvalue=\"{Fecod}\"\r\n\t\t\t\t\t\tshowValueHelp=\"true\"\r\n\t\t\t\t\t\tvalueHelpOnly=\"true\"\r\n\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_sint\"\r\n\t\t\t\t\t\tplaceholder=\"Seleccione Sintoma\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</Input>\r\n\t\t\t\t\t<Label id=\"grup_cod_sintoma\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t<Label id=\"cod_sintoma\" text=\"\" visible=\"false\"/>\r\n\t\t\t\t\t<l:HorizontalLayout class=\"sapUiSmallMargin\" >\r\n\t\t\t\t\t<core:Icon color=\"green\" id=\"btn_crear_conjunto_select\" press=\"f_crear_conjunto\" size=\"3em\" src=\"sap-icon://add-activity-2\" visible=\"true\"/>\r\n\t\t\t\t\t<core:Icon color=\"red\" id=\"btn_eliminar\" press=\"f_confir_elimina_conjunto\" size=\"3em\" src=\"sap-icon://delete\" visible=\"true\"/>\r\n\t\t\t\t\t</l:HorizontalLayout>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t\t\r\n\t\t<beginButton>\r\n\t\t\t<Button id=\"btn_cancela_conjunto\" press=\"f_close_dialogo_conjunto\" text=\"Cancelar\" type=\"Reject\"/>\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button id=\"btn_conjunto_select\" press=\"f_actualiza_conjunto\" text=\"Guardar\" type=\"Accept\"/>\r\n\t\t</endButton>\r\n\t</Dialog>\r\n</core:FragmentDefinition>",
		"com/corona/view/Master.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" controllerName=\"com.corona.controller.Master\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField placeholder=\"{i18n>placeHolderBuscar}\" id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"f_buscar_avisos\"/>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{/AvisoSet}\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" mode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Qmnum}\" number=\"{ path: 'Qmdat', type: 'sap.ui.model.type.Date'}\" numberUnit=\"{ path: 'Mzeit', type: 'sap.ui.model.odata.type.Time'}\">\n\t\t\t\t\t\t\n\t\t\t\t\t<firstStatus>\n\t\t\t\t\t\t<ObjectStatus text=\"{Qmartx}\" state=\"Success\"/>\n\t\t\t\t\t</firstStatus>\n\t\t\t\t\t\n\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"{Name1}\"/>\n\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t\t\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" visible=\"false\" press=\"onAdd\"/>\n\t\t</semantic:addAction>\n\t<semantic:mainAction>\n\t    <semantic:MainAction text=\"Login\" id=\"__action1\" press=\"f_open_dialog_login\"/>\n\t</semantic:mainAction>\n\t</semantic:MasterPage>\n</mvc:View>",
		"com/corona/view/NotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>"
	}
});